service: hottakes
provider:
  name: aws
  runtime: nodejs6.10
  memorySize: 128
  versionFunctions: false
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:us-east-1:*:*"
package:
  individually: true
  exclude:
    - ../node_modules/**
    - '!../node_modules/uuid/**'
functions:
  getTwitterHottakes:
    handler: handler.getTwitterHottakes
    description: Polls for daily hottakes from twitter
    package:
      include:
        - ../node_modules/**
    events: 
      - http:
          path: hottake/new
          method: get
    environment:
      access_token: ${file(./serverless.env.yml):${opt:stage}.access_token}
      consumer_key: ${file(./serverless.env.yml):${opt:stage}.consumer_key}
      consumer_secret: ${file(./serverless.env.yml):${opt:stage}.consumer_secret}
      access_token_secret: ${file(./serverless.env.yml):${opt:stage}.access_token_secret}
  voteUp:
    handler: handler.voteUp
    description: Conducts an upvote on a specific hottake
    events:
      - http:
          path: hottake/spicy/{id}
          method: put
          request: 
            parameters: 
              paths: 
                id: true
  voteDown:
    handler: handler.voteDown
    description: Conducts a downvote on a specific hottake
    events:
      - http:
          path: hottake/chilly/{id}
          method: put
          request: 
            parameters: 
              paths: 
                id: true
  deleteTake:
    handler: handler.deleteTake
    description: deletes a hottake by id
    events:
      - http:
          path: hottake/{id}
          method: delete
          request: 
            parameters: 
              paths: 
                id: true
  getRandomTake:
    handler: handler.getRandomTake
    description: gets a random hottake from dynamodb:hottakeTable
    events:
      - http:
          path: hottake/random
          method: get
  submitHottake:
    handler: handler.submitHottake
    description: Adds user submited hottake to the hottake collection
    events:
      - http:
          path: hottake/newtake
          method: post

resources:
  Resources:
    HottakesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: hottakeTable
        AttributeDefinitions:
          - AttributeName: uuid
            AttributeType: S
        KeySchema:
          - AttributeName: uuid
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    DynamoDBIamPolicy:
      Type: AWS::IAM::Policy
      DependsOn: HottakesTable
      Properties:
        PolicyName: lambda-dynamodb
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:GetItem
                - dynamodb:PutItem
                - dynamodb:UpdateItem
                - dynamodb:DeleteItem
                - dynamodb:Query
              Resource: arn:aws:dynamodb:*:*:table/hottakeTable
        Roles:
          - Ref: IamRoleLambdaExecution     
